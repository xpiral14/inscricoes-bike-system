server {
    # 1. Porta de Escuta
    # A porta 3540 é onde o Nginx irá escutar DENTRO do contêiner.
    listen 3540;
    listen [::]:3540;

    # 2. Raiz do Documento
    # Laravel usa a pasta 'public' como a raiz web.
    root /var/www/html/public; # Ajuste o caminho se a sua aplicação não estiver em /var/www/html

    # 3. Nome do Servidor
    # Não é estritamente necessário em um contêiner, mas é boa prática.
    server_name _;

    # 4. Configuração de Cache e Headers (Opcional, mas recomendado)
    index index.php index.html;
    charset utf-8;

    # 5. Roteamento Laravel (Tratamento para a location principal "/")
    # Esta é a parte mais CRÍTICA para evitar o 404.
    # Ele tenta encontrar o arquivo ($uri), se não encontrar, tenta o diretório ($uri/),
    # se ainda assim não encontrar, ele envia a requisição para o index.php (Laravel).
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # 6. Prevenção de Acesso Direto a Arquivos Sensíveis
    # Proíbe acesso direto a arquivos .env ou .htaccess
    location ~ /\. {
        deny all;
    }

    # 7. Tratamento de Arquivos PHP (PHP-FPM)
    # Envia todos os arquivos .php para o PHP-FPM
    location ~ \.php$ {
        # Tenta verificar se o arquivo PHP existe
        try_files $uri =404;

        # Onde o PHP-FPM está escutando.
        # Geralmente é um socket ou a porta 9000.
        # Se você usa um contêiner PHP-FPM separado, use o nome do serviço:
        fastcgi_pass php-fpm:9000;

        # Se o PHP-FPM estiver no MESMO contêiner, use:
        # fastcgi_pass 127.0.0.1:9000;

        # Inclui os parâmetros FastCGI
        include fastcgi_params;

        # Define o caminho do script para o PHP-FPM (CRÍTICO para Laravel)
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;

        # Define a variável PATH_INFO para o Laravel
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }

    # 8. Configurações de Gzip e Logs
    gzip on;
    # ... outras configurações de log e otimização ...
}
